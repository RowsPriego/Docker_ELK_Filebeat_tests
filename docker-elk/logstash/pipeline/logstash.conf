input {
	beats {
		port => 5044
	}
}

filter {

  # Partir los eventos en sus partes principales
  grok {
    match => [ "message", "%{TIMESTAMP_ISO8601:ts} %{LOGLEVEL:level}  %{NOTSPACE:logger} - %{GREEDYDATA:message}" ]
    add_field => ["aseguradora_filename", "%{source}"]
  }

  # AÃ±ade el timestamp del fichero
	date {
    match  => [ "ts", "yyyy-MM-dd HH:mm:ss" ]
    target => "target_timestamp"
  }


  # Borrar los eventos que no deberian estar en el log: p.e. Hibernate logs
  if [logger] =~ "^Version|Environment|Configuration|ConnectionProviderInitiator|C3P0ConnectionProvider|MLog|C3P0Registry|Dialect|LobCreatorBuilder|TransactionFactoryInitiator|ASTQueryTranslatorFactory|AbstractPoolBackedDataSource|MongoUtils:79" {
		drop { }
  }

	# Borra los eventos que no tengan logger (por ejemplo los ****)
	if ![logger] {
		drop { }
	}

	if [logger] == "LoadUsersFromCSV:164" {

		# METRICA 1:  Eventos a analizar
		mutate {
			split => ["message",":"]
			add_field => { "eventos_analizar" => "%{message[1]}" }
		}

		mutate {
			split => ["eventos_analizar", ":"]
			add_field => { "eventos_analizar_count" => "%{eventos_analizar[1]}" }
		}

		mutate {
			convert => {
				"eventos_analizar_count" => "integer"
			}
			remove_field => [ "eventos_analizar" ]
		}

		aggregate {
        task_id => "%{level}"
        code => "map['eventos_analizar_count'] = event.get('eventos_analizar_count')"
				map_action => "update"
    }

	} else if [logger] == "SuccessStatistics:297" {

	 	# METRICA 2: Personas con email
		mutate {
	 		split => ["message", ":"]
	 		add_field => { "personas_email" => "%{message[1]}" }
		}

		mutate {
			 split => ["personas_email", ":"]
			 add_field => { "personas_email_count" => "%{personas_email[1]}" }
		}

		mutate {
			convert => {
				"personas_email_count" => "integer"
			}
			remove_field => [ "personas_email" ]
		}

		aggregate {
        task_id => "%{level}"
        code => "map['personas_email_count'] = event.get('personas_email_count')"
    }

  } else if [logger] == "SuccessStatistics:307" {

		# METRICA 3: Perfiles Facebook encontrados por email en FullContact
		mutate {
	 		split => ["message", ":"]
	 		add_field => { "personas_email_fullcontact_FB" => "%{message[1]}" }
		}

		mutate {
			 split => ["personas_email_fullcontact_FB", ":"]
			 add_field => { "personas_email_fullcontact_FB_count" => "%{personas_email_fullcontact_FB[1]}" }
		}

		mutate {
			convert => {
				"personas_email_fullcontact_FB_count" => "integer"
			}
			remove_field => [ "personas_email_fullcontact_FB" ]
		}

		aggregate {
        task_id => "%{level}"
        code => "map['personas_email_fullcontact_FB_count'] = event.get('personas_email_fullcontact_FB_count')"
    }
	} else if [logger] == "SuccessStatistics:324" {

		# METRICA 4: Perfiles Facebook encontrados por email en FourSquare
		mutate {
	 		split => ["message", ":"]
	 		add_field => { "personas_email_foursquare_FB" => "%{message[1]}" }
		}

		mutate {
			 split => ["personas_email_foursquare_FB", ":"]
			 add_field => { "personas_email_foursquare_FB_count" => "%{personas_email_foursquare_FB[1]}" }
		}

		mutate {
			convert => {
				"personas_email_foursquare_FB_count" => "integer"
			}
			remove_field => [ "personas_email_foursquare_FB" ]
		}

		aggregate {
        task_id => "%{level}"
        code => "map['personas_email_foursquare_FB_count'] = event.get('personas_email_foursquare_FB_count')"
    }
	} else if [logger] == "SuccessStatistics:345" {

		# METRICA 5: Perfiles Facebook encontrados por email en Pipl
		mutate {
	 		split => ["message", ":"]
	 		add_field => { "personas_email_pipl_FB" => "%{message[1]}" }
		}

		mutate {
			 split => ["personas_email_pipl_FB", ":"]
			 add_field => { "personas_email_pipl_FB_count" => "%{personas_email_pipl_FB[1]}" }
		}

		mutate {
			convert => {
				"personas_email_pipl_FB_count" => "integer"
			}
			remove_field => [ "personas_email_pipl_FB" ]
		}

		aggregate {
        task_id => "%{level}"
        code => "map['personas_email_pipl_FB_count'] = event.get('personas_email_pipl_FB_count')"
    }

	} else if [logger] == "SuccessStatistics:314" {

		# METRICA 6: Perfiles Twitter encontrados por email en FullContact
		mutate {
	 		split => ["message", ":"]
	 		add_field => { "personas_email_fullcontact_TW" => "%{message[1]}" }
		}

		mutate {
			 split => ["personas_email_fullcontact_TW", ":"]
			 add_field => { "personas_email_fullcontact_TW_count" => "%{personas_email_fullcontact_TW[1]}" }
		}

		mutate {
			convert => {
				"personas_email_fullcontact_TW_count" => "integer"
			}
			remove_field => [ "personas_email_fullcontact_TW" ]
		}

		aggregate {
        task_id => "%{level}"
        code => "map['personas_email_fullcontact_TW_count'] = event.get('personas_email_fullcontact_TW_count')"
    }

	} else if [logger] == "SuccessStatistics:331" {

		# METRICA 7: Perfiles Twitter encontrados por email en FourSquare
		mutate {
	 		split => ["message", ":"]
	 		add_field => { "personas_email_foursquare_TW" => "%{message[1]}" }
		}

		mutate {
			 split => ["personas_email_foursquare_TW", ":"]
			 add_field => { "personas_email_foursquare_TW_count" => "%{personas_email_foursquare_TW[1]}" }
		}

		mutate {
			convert => {
				"personas_email_foursquare_TW_count" => "integer"
			}
			remove_field => [ "personas_email_foursquare_TW" ]
		}

		aggregate {
        task_id => "%{level}"
        code => "map['personas_email_foursquare_TW_count'] = event.get('personas_email_foursquare_TW_count')"
    }

	} else if [logger] == "SuccessStatistics:352" {

		# METRICA 8: Perfiles Twitter encontrados por email en Pipl
		mutate {
	 		split => ["message", ":"]
	 		add_field => { "personas_email_pipl_TW" => "%{message[1]}" }
		}

		mutate {
			 split => ["personas_email_pipl_TW", ":"]
			 add_field => { "personas_email_pipl_TW_count" => "%{personas_email_pipl_TW[1]}" }
		}

		mutate {
			convert => {
				"personas_email_pipl_TW_count" => "integer"
			}
			remove_field => [ "personas_email_pipl_TW" ]
		}

		aggregate {
        task_id => "%{level}"
        code => "map['personas_email_pipl_TW_count'] = event.get('personas_email_pipl_TW_count')"
    }

	} else if [logger] == "SuccessStatistics:359" {

	 	# METRICA 9: Peticiones totales a Pipl
		mutate {
	 		split => ["message", ":"]
	 		add_field => { "total_pipl" => "%{message[1]}" }
		}

		mutate {
			 split => ["total_pipl", ":"]
			 add_field => { "total_pipl_count" => "%{total_pipl[1]}" }
		}

		mutate {
			convert => {
				"total_pipl_count" => "integer"
			}
			remove_field => [ "total_pipl" ]
		}

		aggregate {
        task_id => "%{level}"
        code => "map['total_pipl_count'] = event.get('total_pipl_count')"
    }

  } else if [logger] == "SuccessStatistics:360" {

		# METRICA 10: Peticiones totales a Pipl con match
		mutate {
			split => ["message", ":"]
			add_field => { "total_pipl_match" => "%{message[1]}" }
		}

		mutate {
			 split => ["total_pipl_match", ":"]
			 add_field => { "total_pipl_match_count" => "%{total_pipl_match[1]}" }
		}

		mutate {
			convert => {
				"total_pipl_match_count" => "integer"
			}
			remove_field => [ "total_pipl_match" ]
		}

		aggregate {
				task_id => "%{level}"
				code => "map['total_pipl_match_count'] = event.get('total_pipl_match_count')"
		}

	} else if [logger] == "SuccessStatistics:366" {

		# METRICA 11: Personas encontradas por email en Facebook
		mutate {
			split => ["message", ":"]
			add_field => { "total_mail_FB" => "%{message[1]}" }
		}

		mutate {
			 split => ["total_mail_FB", ":"]
			 add_field => { "total_mail_FB_count" => "%{total_mail_FB[1]}" }
		}

		mutate {
			convert => {
				"total_mail_FB_count" => "integer"
			}
			remove_field => [ "total_mail_FB" ]
		}

		aggregate {
				task_id => "%{level}"
				code => "map['total_mail_FB_count'] = event.get('total_mail_FB_count')"
		}


	} else if [logger] == "SuccessStatistics:375" {

		# METRICA 12: Personas encontradas por telefono en Facebook
		mutate {
			split => ["message", ":"]
			add_field => { "total_telf_FB" => "%{message[1]}" }
		}

		mutate {
			 split => ["total_telf_FB", ":"]
			 add_field => { "total_telf_FB_count" => "%{total_telf_FB[1]}" }
		}

		mutate {
			convert => {
				"total_telf_FB_count" => "integer"
			}
			remove_field => [ "total_telf_FB" ]
		}

		aggregate {
				task_id => "%{level}"
				code => "map['total_telf_FB_count'] = event.get('total_telf_FB_count')"
		}


	} else if [logger] == "SuccessStatistics:383" {

		# METRICA 13: Personas encontradas en los amigos de Facebook
		mutate {
			split => ["message", ":"]
			add_field => { "total_amigos_FB" => "%{message[1]}" }
		}

		mutate {
			 split => ["total_amigos_FB", ":"]
			 add_field => { "total_amigos_FB_count" => "%{total_amigos_FB[1]}" }
		}

		mutate {
			convert => {
				"total_amigos_FB_count" => "integer"
			}
			remove_field => [ "total_amigos_FB" ]
		}

		aggregate {
				task_id => "%{level}"
				code => "map['total_amigos_FB_count'] = event.get('total_amigos_FB_count')"
		}

	} else if [logger] == "SuccessStatistics:391" {

		# METRICA 14: Visitas totales a Facebook para descargar datos
		mutate {
			split => ["message", ":"]
			add_field => { "total_visitas_FB" => "%{message[1]}" }
		}

		mutate {
			 split => ["total_visitas_FB", ":"]
			 add_field => { "total_visitas_FB_count" => "%{total_visitas_FB[1]}" }
		}

		mutate {
			convert => {
				"total_visitas_FB_count" => "integer"
			}
			remove_field => [ "total_visitas_FB" ]
		}

		aggregate {
				task_id => "%{level}"
				code => "map['total_visitas_FB_count'] = event.get('total_visitas_FB_count')"
		}

	} else if [logger] == "SuccessStatistics:393" {

		# METRICA 15: Visitas totales a Twitter para descargar datos
		mutate {
			split => ["message", ":"]
			add_field => { "total_visitas_TW" => "%{message[1]}" }
		}

		mutate {
			 split => ["total_visitas_TW", ":"]
			 add_field => { "total_visitas_TW_count" => "%{total_visitas_TW[1]}" }
		}

		mutate {
			convert => {
				"total_visitas_TW_count" => "integer"
			}
			remove_field => [ "total_visitas_TW" ]
		}

		aggregate {
				task_id => "%{level}"
				code => "map['total_visitas_TW_count'] = event.get('total_visitas_TW_count')"
		}

	} else if [logger] == "SuccessStatistics:398" {

		# METRICA 16: Peticiones a Bing para la fase de matching
		mutate {
			split => ["message", ":"]
			add_field => { "total_visitas_BING" => "%{message[1]}" }
		}

		mutate {
			 split => ["total_visitas_BING", ":"]
			 add_field => { "total_visitas_BING_count" => "%{total_visitas_BING[1]}" }
		}

		mutate {
			convert => {
				"total_visitas_BING_count" => "integer"
			}
			remove_field => [ "total_visitas_BING" ]
		}

		aggregate {
				task_id => "%{level}"
				code => "map['total_visitas_BING_count'] = event.get('total_visitas_BING_count')"
		}

	} else if [logger] == "SuccessStatistics:400" {

		# METRICA 17: Peticiones a Google para la fase de matching
		mutate {
			split => ["message", ":"]
			add_field => { "total_visitas_GOOGLE" => "%{message[1]}" }
		}

		mutate {
			 split => ["total_visitas_GOOGLE", ":"]
			 add_field => { "total_visitas_GOOGLE_count" => "%{total_visitas_GOOGLE[1]}" }
		}

		mutate {
			convert => {
				"total_visitas_GOOGLE_count" => "integer"
			}
			remove_field => [ "total_visitas_GOOGLE" ]
		}

		aggregate {
				task_id => "%{level}"
				code => "map['total_visitas_GOOGLE_count'] = event.get('total_visitas_GOOGLE_count')"
		}

	} else if [logger] == "SuccessStatistics:402" {

		# METRICA 18: Usuarios encontrados solo en Google para la fase de matching
		mutate {
			split => ["message", ":"]
			add_field => { "total_usuarios_GOOGLE" => "%{message[1]}" }
		}

		mutate {
			 split => ["total_usuarios_GOOGLE", ":"]
			 add_field => { "total_usuarios_GOOGLE_count" => "%{total_usuarios_GOOGLE[1]}" }
		}

		mutate {
			convert => {
				"total_usuarios_GOOGLE_count" => "integer"
			}
			remove_field => [ "total_usuarios_GOOGLE" ]
		}

		aggregate {
				task_id => "%{level}"
				code => "map['total_usuarios_GOOGLE_count'] = event.get('total_usuarios_GOOGLE_count')"
		}
	}

	if [logger] == "SuccessStatistics:409" {

		aggregate {
				task_id => "%{level}"
				code => "
						event.set('eventos_analizar_count', map['eventos_analizar_count'])
						event.set('personas_email_count', map['personas_email_count'])
						event.set('personas_email_fullcontact_FB_count', map['personas_email_fullcontact_FB_count'])
						event.set('personas_email_foursquare_FB_count', map['personas_email_foursquare_FB_count'])
						event.set('personas_email_pipl_FB_count', map['personas_email_pipl_FB_count'])
						event.set('personas_email_fullcontact_TW_count', map['personas_email_fullcontact_TW_count'])
						event.set('personas_email_foursquare_TW_count', map['personas_email_foursquare_TW_count'])
						event.set('personas_email_pipl_TW_count', map['personas_email_pipl_TW_count'])
						event.set('total_pipl_count', map['total_pipl_count'])
						event.set('total_pipl_match_count', map['total_pipl_match_count'])
						event.set('total_mail_FB_count', map['total_mail_FB_count'])
						event.set('total_telf_FB_count', map['total_telf_FB_count'])
						event.set('total_amigos_FB_count', map['total_amigos_FB_count'])
						event.set('total_visitas_FB_count', map['total_visitas_FB_count'])
						event.set('total_visitas_TW_count', map['total_visitas_TW_count'])
						event.set('total_visitas_BING_count', map['total_visitas_BING_count'])
						event.set('total_visitas_GOOGLE_count', map['total_visitas_GOOGLE_count'])
						event.set('total_usuarios_GOOGLE_count', map['total_usuarios_GOOGLE_count'])
					"
				map_action => "update"
				timeout => 0
		}

	} else {

		drop { }

	}
}


output {

	elasticsearch {
		hosts => "elasticsearch:9200"
		index => "logstash-ms-%{+YYYY.MM.dd}"
	}

	stdout { codec => rubydebug }

}
